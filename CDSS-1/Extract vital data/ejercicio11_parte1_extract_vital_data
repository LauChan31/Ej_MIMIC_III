{"cells":[{"cell_type":"markdown","id":"adjusted-jersey","metadata":{"id":"adjusted-jersey"},"source":["# Extract vital data from MIMIC-III (aline study step 1)\n","Indwelling arterial catheters (IACs) are being used to monitor hemodynamics and also for blood gas analysis. However, those catheters  pose serious risks such as infections or vascular problems. The MIMIC-III dataset can be used to study if IAC use is associated with mortality in patients on the ICU. The queries in this notebook are based on the following paper:\n","\n","Hsu, D. J., Feng, M., Kothari, R., Zhou, H., Chen, K. P., & Celi, L. A. (2015). The association between indwelling arterial catheters and mortality in hemodynamically stable patients with respiratory failure: a propensity score analysis. Chest, 148(6), 1470-1476. <br> <br>\n","\n","\n","__Create a table with only vital data in it, with all subjects above 16:__\n","\n","First we only want to get all the __adults__ patients' data without all the administrative data in it. The table only contains 'vital' data for patients with age >= 16. We create a table out of it instead of a standard query, so that we do not need to join all tables again for all of the queries below."]},{"cell_type":"code","execution_count":null,"id":"greenhouse-combat","metadata":{"id":"greenhouse-combat"},"outputs":[],"source":["# Imports:\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from matplotlib import cm\n","import psycopg2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"id":"refined-imagination","metadata":{"id":"refined-imagination"},"outputs":[],"source":["# Configuration:\n","sqluser = 'postgres'\n","dbname = 'mimic'\n","password = 'postgres'\n","schema_name = 'mimiciii, public'\n","\n","# Connect to MIMIC\n","con = psycopg2.connect(dbname=dbname, user=sqluser, password=password)\n","cur = con.cursor()\n","\n","# Function to execute a query safely, used when we create a new table:\n","def execute_query_safely(sql, con, cur):\n","    cur = con.cursor()\n","    try:\n","        cur.execute(sql)\n","    except (Exception, psycopg2.DatabaseError) as error:\n","        print(error)\n","    finally:\n","        cur.close()\n","    return"]},{"cell_type":"code","execution_count":null,"id":"norwegian-loading","metadata":{"id":"norwegian-loading"},"outputs":[],"source":["# IDs for heart rate:\n","vital_data_ids = {'heart_rate': (211, 220045)}"]},{"cell_type":"code","execution_count":null,"id":"muslim-companion","metadata":{"scrolled":true,"id":"muslim-companion"},"outputs":[],"source":["# Create a table with all patients > 16 so we can access it again later:\n","query = \\\n","\"\"\"\n","DROP TABLE IF EXISTS adult_patients;\n","CREATE TABLE adult_patients AS\n","    with vital_data as (\n","        SELECT i.icustay_id, min(ce.charttime) as intime\n","        FROM mimiciii.icustays i\n","        LEFT JOIN mimiciii.chartevents ce\n","        ON i.icustay_id = ce.icustay_id\n","        AND ce.charttime between i.intime - interval '12' hour and i.outtime + interval '12' hour\n","        AND ce.itemid in \"\"\" + str(vital_data_ids['heart_rate']) + \"\"\"\n","        GROUP BY i.icustay_id\n","    )\n","    SELECT i.subject_id, i.hadm_id, i.icustay_id, vd.intime, i.outtime\n","    FROM vital_data vd\n","    INNER JOIN mimiciii.icustays i ON vd.icustay_id = i.icustay_id\n","    INNER JOIN mimiciii.admissions a ON i.hadm_id = a.hadm_id\n","    INNER JOIN mimiciii.patients p ON i.subject_id = p.subject_id\n","    WHERE vd.intime > (p.dob + interval '16' year);\n","\"\"\"\n","\n","query_schema = 'SET search_path TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con, cur)"]},{"cell_type":"code","execution_count":null,"id":"corrected-gibraltar","metadata":{"id":"corrected-gibraltar"},"outputs":[],"source":["# Add the exclusion criteria to the table. We will fill in these values later.\n","query = \\\n","\"\"\"\n","ALTER TABLE adult_patients\n","ADD COLUMN exclusion_readmission_and_los integer,\n","ADD COLUMN exclusion_mechanical_ventilation integer,\n","ADD COLUMN exclusion_sepsis integer,\n","ADD COLUMN exclusion_vasopressors integer,\n","ADD COLUMN exclusion_prior_iac_placement integer,\n","ADD COLUMN exclusion_csru integer default 0,\n","ADD COLUMN iac_group integer\n","\"\"\"\n","\n","query_schema = 'SET SEARCH_PATH TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con, cur)"]},{"cell_type":"code","execution_count":null,"id":"soviet-doubt","metadata":{"id":"soviet-doubt"},"outputs":[],"source":["# Commit to the database and close the connection:\n","con.commit()\n","con.close()"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}