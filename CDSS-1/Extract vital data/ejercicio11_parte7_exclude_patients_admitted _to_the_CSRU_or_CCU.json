{"cells":[{"cell_type":"markdown","id":"adjusted-jersey","metadata":{"id":"adjusted-jersey"},"source":["# Exclude patients on the cardiac ICU (aline study step 7)\n","Indwelling arterial catheters (IACs) are being used to monitor hemodynamics and also for blood gas analysis. However, those catheters  pose serious risks such as infections or vascular problems. The MIMIC-III dataset can be used to study if IAC use is associated with mortality in patients on the ICU. The queries in this notebook are based on the following paper:\n","\n","Hsu, D. J., Feng, M., Kothari, R., Zhou, H., Chen, K. P., & Celi, L. A. (2015). The association between indwelling arterial catheters and mortality in hemodynamically stable patients with respiratory failure: a propensity score analysis. Chest, 148(6), 1470-1476. <br> <br>\n","\n","__Exclude patients who are on the CSRU (Cardiac surgery recovery unit):__\n","\n","We will exclude the patients who received one of the following hospital services: 'CMED', 'CSURG',' VSURG', or 'TSURG'."]},{"cell_type":"code","execution_count":null,"id":"greenhouse-combat","metadata":{"id":"greenhouse-combat"},"outputs":[],"source":["# Imports:\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from matplotlib import cm\n","import psycopg2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"id":"refined-imagination","metadata":{"id":"refined-imagination"},"outputs":[],"source":["# Config\n","sqluser = 'postgres'\n","dbname = 'mimic'\n","password='postgres'\n","schema_name = 'mimiciii'\n","\n","# Connect to MIMIC\n","con = psycopg2.connect(dbname=dbname, user=sqluser, password=password)\n","cur = con.cursor()\n","cur.execute('SET search_path to ' + schema_name)\n","# cur.close()\n","# con.close()\n","\n","# Function to execute a query safely, used when we create a new table:\n","def execute_query_safely(sql, con):\n","    cur = con.cursor()\n","    try:\n","        cur.execute(sql)\n","    except:\n","        cur.execute('rollback;')\n","        raise\n","    finally:\n","        cur.close()\n","    return"]},{"cell_type":"code","execution_count":null,"id":"embedded-coating","metadata":{"id":"embedded-coating","outputId":"51f67989-9869-4497-ff68-15ad1b354f3b"},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>curr_service</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>TRAUM</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NB</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DENT</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CSURG</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CMED</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>ORTHO</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ENT</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>GU</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>NMED</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>SURG</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>GYN</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>TSURG</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>VSURG</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>MED</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>PSYCH</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>NSURG</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>OBS</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>OMED</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>NBB</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>PSURG</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   curr_service\n","0         TRAUM\n","1            NB\n","2          DENT\n","3         CSURG\n","4          CMED\n","5         ORTHO\n","6           ENT\n","7            GU\n","8          NMED\n","9          SURG\n","10          GYN\n","11        TSURG\n","12        VSURG\n","13          MED\n","14        PSYCH\n","15        NSURG\n","16          OBS\n","17         OMED\n","18          NBB\n","19        PSURG"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# First check the different hospital services that are available:\n","query = \\\n","\"\"\"\n","SELECT s.curr_service\n","FROM mimiciii.services s\n","GROUP BY s.curr_service\n","\"\"\"\n","\n","query_output = pd.read_sql_query(query, con)\n","query_output"]},{"cell_type":"code","execution_count":null,"id":"foster-observer","metadata":{"id":"foster-observer"},"outputs":[],"source":["query = \\\n","\"\"\"\n","with most_recent_icustays as (\n","    SELECT i.icustay_id,\n","    CASE\n","        WHEN (ROW_NUMBER() over (partition by i.icustay_id order by s.transfertime DESC) = 1)\n","             AND (s.curr_service in ('CMED', 'CSURG', 'VSURG', 'TSURG')) THEN 1\n","        ELSE 0 END as most_recent_on_csru\n","    FROM mimiciii.icustays i\n","    INNER JOIN mimiciii.services s ON i.hadm_id = s.hadm_id\n","    WHERE s.transfertime < i.intime + interval '2' hour\n","    ),\n","exclusion_criteria as (\n","SELECT ap.subject_id, most_recent_on_csru, ap.icustay_id\n","FROM adult_patients ap\n","INNER JOIN most_recent_icustays icu ON ap.icustay_id = icu.icustay_id\n","WHERE most_recent_on_csru = 1\n",")\n","UPDATE adult_patients\n","SET exclusion_csru = exclusion_criteria.most_recent_on_csru\n","FROM exclusion_criteria\n","WHERE adult_patients.icustay_id = exclusion_criteria.icustay_id\n","\"\"\"\n","\n","query_schema = 'SET SEARCH_PATH TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con)"]},{"cell_type":"code","execution_count":null,"id":"confident-village","metadata":{"id":"confident-village","outputId":"183da6cc-a275-4acf-b756-3ae2b59b4dfd"},"outputs":[{"name":"stdout","output_type":"stream","text":["Subjects excluded because they already had an ICU placed:  15499\n"]}],"source":["# Check if the number of excluded subject is correct:\n","query = \"\"\" SELECT * FROM adult_patients \"\"\"\n","query_output = pd.read_sql_query(query, con)\n","print('Subjects excluded because they already had an ICU placed: ',\n","      query_output['exclusion_csru'].sum())"]},{"cell_type":"code","execution_count":null,"id":"commercial-stranger","metadata":{"id":"commercial-stranger"},"outputs":[],"source":["# Commit to the database and close the connection:\n","con.commit()\n","con.close()"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}