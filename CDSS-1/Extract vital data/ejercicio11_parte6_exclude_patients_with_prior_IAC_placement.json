{"cells":[{"cell_type":"markdown","id":"adjusted-jersey","metadata":{"id":"adjusted-jersey"},"source":["# Exclude patients with a prior IAC placement (aline study step 6)\n","Indwelling arterial catheters (IACs) are being used to monitor hemodynamics and also for blood gas analysis. However, those catheters  pose serious risks such as infections or vascular problems. The MIMIC-III dataset can be used to study if IAC use is associated with mortality in patients on the ICU. The queries in this notebook are based on the following paper:\n","\n","Hsu, D. J., Feng, M., Kothari, R., Zhou, H., Chen, K. P., & Celi, L. A. (2015). The association between indwelling arterial catheters and mortality in hemodynamically stable patients with respiratory failure: a propensity score analysis. Chest, 148(6), 1470-1476. <br> <br>\n","\n","__Exclude patients who had an IAC placement prior to admission to the ICU:__"]},{"cell_type":"code","execution_count":null,"id":"greenhouse-combat","metadata":{"id":"greenhouse-combat"},"outputs":[],"source":["# Imports:\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from matplotlib import cm\n","import psycopg2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"id":"refined-imagination","metadata":{"id":"refined-imagination"},"outputs":[],"source":["# Configuration:\n","sqluser = 'postgres'\n","dbname = 'mimic'\n","password = 'postgres'\n","schema_name = 'mimiciii, public'\n","\n","# Connect to MIMIC\n","con = psycopg2.connect(dbname=dbname, user=sqluser, password=password)\n","cur = con.cursor()\n","\n","# Function to execute a query safely, used when we create a new table:\n","def execute_query_safely(sql, con, cur):\n","    cur = con.cursor()\n","    try:\n","        cur.execute(sql)\n","    except (Exception, psycopg2.DatabaseError) as error:\n","        print(error)\n","    finally:\n","        cur.close()\n","    return"]},{"cell_type":"code","execution_count":null,"id":"collectible-polish","metadata":{"id":"collectible-polish"},"outputs":[],"source":["iac_placement_ids = \\\n","{\n","    'itemids_iac': (51, 6701, 220050, 8368, 8555, 220051, 52, 6702, 220052, 225312)\n","}"]},{"cell_type":"code","execution_count":null,"id":"bound-static","metadata":{"id":"bound-static"},"outputs":[],"source":["query = \\\n","\"\"\"\n","with iac_placement_table AS (\n","    SELECT ce.icustay_id, min(ce.charttime) as iac_time\n","    FROM mimiciii.chartevents ce\n","    WHERE ce.itemid in \"\"\" + str(iac_placement_ids['itemids_iac']) + \"\"\"\n","    AND ce.valuenum is not null AND ce.icustay_id is not null\n","    GROUP BY ce.icustay_id\n","),\n","\n","exclusion_criteria as (\n","    SELECT ap.subject_id, ap.icustay_id,\n","    CASE WHEN ipt.iac_time <= ap.intime THEN 1\n","    ELSE 0 END AS excl_cr\n","    FROM iac_placement_table ipt\n","    RIGHT JOIN adult_patients ap ON ipt.icustay_id = ap.icustay_id\n",")\n","UPDATE adult_patients\n","SET exclusion_prior_iac_placement = exclusion_criteria.excl_cr\n","FROM exclusion_criteria\n","WHERE adult_patients.icustay_id = exclusion_criteria.icustay_id\n","\"\"\"\n","query_schema = 'SET SEARCH_PATH TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con, cur)"]},{"cell_type":"code","execution_count":null,"id":"greek-table","metadata":{"id":"greek-table","outputId":"3c05f272-808f-43d1-e252-348310973da8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Subjects excluded because they already had an ICU placed:  12961\n"]}],"source":["# Check if the number of excluded subject is correct:\n","query = \"\"\" SELECT * FROM adult_patients \"\"\"\n","query_output = pd.read_sql_query(query, con)\n","print('Subjects excluded because they already had an ICU placed: ',\n","      query_output['exclusion_prior_iac_placement'].sum())"]},{"cell_type":"code","execution_count":null,"id":"humanitarian-bulgarian","metadata":{"id":"humanitarian-bulgarian"},"outputs":[],"source":["# Commit to the database and close the connection:\n","con.commit()\n","con.close()"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}