{"cells":[{"cell_type":"markdown","id":"adjusted-jersey","metadata":{"id":"adjusted-jersey"},"source":["# Exclude readmissions in MIMIC-III (aline study step 2)\n","Indwelling arterial catheters (IACs) are being used to monitor hemodynamics and also for blood gas analysis. However, those catheters  pose serious risks such as infections or vascular problems. The MIMIC-III dataset can be used to study if IAC use is associated with mortality in patients on the ICU. The queries in this notebook are based on the following paper:\n","\n","Hsu, D. J., Feng, M., Kothari, R., Zhou, H., Chen, K. P., & Celi, L. A. (2015). The association between indwelling arterial catheters and mortality in hemodynamically stable patients with respiratory failure: a propensity score analysis. Chest, 148(6), 1470-1476. <br><br>\n","\n","__Get all adult patients' first ICU admission that took at least one day:__ <br>\n","Some patients were admitted to the ICU more than once. We only want to take into account the first ICU admission, and only include ICU admissions that took at least one day:"]},{"cell_type":"code","execution_count":null,"id":"greenhouse-combat","metadata":{"id":"greenhouse-combat"},"outputs":[],"source":["# Imports:\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from matplotlib import cm\n","import psycopg2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"id":"refined-imagination","metadata":{"id":"refined-imagination"},"outputs":[],"source":["# Configuration:\n","sqluser = 'postgres'\n","dbname = 'mimic'\n","password='postgres'\n","schema_name = 'mimiciii, public'\n","\n","# Connect to MIMIC\n","con = psycopg2.connect(dbname=dbname, user=sqluser, password=password)\n","cur = con.cursor()\n","\n","# Function to execute a query safely, used when we create a new table:\n","def execute_query_safely(sql, con, cur):\n","    cur = con.cursor()\n","    try:\n","        cur.execute(sql)\n","    except (Exception, psycopg2.DatabaseError) as error:\n","        print(error)\n","    finally:\n","        cur.close()\n","    return"]},{"cell_type":"code","execution_count":null,"id":"potential-stations","metadata":{"id":"potential-stations"},"outputs":[],"source":["query = \\\n","\"\"\"\n","with readmission_and_los as (\n","    SELECT ap.icustay_id,\n","    ROW_NUMBER() over (partition by ap.subject_id order by ap.intime) as readmission_number,\n","    extract(epoch from (ap.outtime - ap.intime))/24.0/60.0/60.0 as icu_los\n","    FROM adult_patients ap\n","),\n","exclusion_criteria as (\n","    SELECT ap.icustay_id,\n","        CASE\n","            WHEN ap.readmission_number != 1 THEN 1\n","            WHEN ap.icu_los < 1 THEN 1\n","            ELSE 0\n","        END as readmission_and_los\n","    FROM readmission_and_los ap\n",")\n","\n","-- Add the exclusion criterium to the adult_patients table so we can retrieve all exclusions in the end:\n","UPDATE adult_patients\n","SET exclusion_readmission_and_los = exclusion_criteria.readmission_and_los\n","FROM exclusion_criteria\n","WHERE adult_patients.icustay_id = exclusion_criteria.icustay_id\n","\"\"\"\n","\n","query_schema = 'SET SEARCH_PATH TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con, cur)"]},{"cell_type":"code","execution_count":null,"id":"historic-nursing","metadata":{"id":"historic-nursing"},"outputs":[],"source":["# Commit to the database:\n","con.commit()"]},{"cell_type":"code","execution_count":null,"id":"insured-scale","metadata":{"id":"insured-scale","outputId":"ca0f20b9-8eaf-4974-c8d3-1a183bdf1a86"},"outputs":[{"name":"stdout","output_type":"stream","text":["Subjects excluded based on readmissions and ICU stays of less than a day:  20816\n"]}],"source":["# Check the number of excluded patients:\n","query = \"\"\"SELECT * FROM adult_patients \"\"\"\n","query_output = pd.read_sql_query(query, con)\n","print('Subjects excluded based on readmissions and ICU stays of less than a day: ',\n","      query_output['exclusion_readmission_and_los'].sum())"]},{"cell_type":"code","execution_count":null,"id":"color-spending","metadata":{"id":"color-spending"},"outputs":[],"source":["# Close the connection:\n","con.close()"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}