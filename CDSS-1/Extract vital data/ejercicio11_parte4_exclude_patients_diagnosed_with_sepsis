{"cells":[{"cell_type":"markdown","id":"adjusted-jersey","metadata":{"id":"adjusted-jersey"},"source":["# Exclude patients diagnoses with sepsis (aline study step 4)\n","Indwelling arterial catheters (IACs) are being used to monitor hemodynamics and also for blood gas analysis. However, those catheters  pose serious risks such as infections or vascular problems. The MIMIC-III dataset can be used to study if IAC use is associated with mortality in patients on the ICU. The queries in this notebook are based on the following paper:\n","\n","Hsu, D. J., Feng, M., Kothari, R., Zhou, H., Chen, K. P., & Celi, L. A. (2015). The association between indwelling arterial catheters and mortality in hemodynamically stable patients with respiratory failure: a propensity score analysis. Chest, 148(6), 1470-1476. <br> <br>\n","\n","__Exclude patients being diagnosed with sepsis:__\n","\n","Patients diagnoses with sepsis will need to be excluded from the study. The paper uses the Angus criteria from the following paper to define sepsis diagnosis:\n","\n","Angus, D. C., Linde-Zwirble, W. T., Lidicker, J., Clermont, G., Carcillo, J., & Pinsky, M. R. (2001). Epidemiology of severe sepsis in the United States: analysis of incidence, outcome, and associated costs of care. Read Online: Critical Care Medicine| Society of Critical Care Medicine, 29(7), 1303-1310.\n","\n","To summarize, a patient is excluded (diagnosed with sepsis) in the following three cases:\n","- The patient is explicitly diagnosed with sepsis.\n","- The patient has an infection in combination with organ dysfunction.\n","- The patient has an infection in combination with mechanical ventilation."]},{"cell_type":"code","execution_count":null,"id":"greenhouse-combat","metadata":{"id":"greenhouse-combat"},"outputs":[],"source":["# Imports:\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from matplotlib import cm\n","import psycopg2\n","%matplotlib inline"]},{"cell_type":"code","execution_count":null,"id":"refined-imagination","metadata":{"id":"refined-imagination"},"outputs":[],"source":["# Configuration:\n","sqluser = 'postgres'\n","dbname = 'mimic'\n","password = 'postgres'\n","schema_name = 'mimiciii, public'\n","\n","# Connect to MIMIC\n","con = psycopg2.connect(dbname=dbname, user=sqluser, password=password)\n","cur = con.cursor()\n","\n","# Function to execute a query safely, used when we create a new table:\n","def execute_query_safely(sql, con, cur):\n","    cur = con.cursor()\n","    try:\n","        cur.execute(sql)\n","    except (Exception, psycopg2.DatabaseError) as error:\n","        print(error)\n","    finally:\n","        cur.close()\n","    return"]},{"cell_type":"code","execution_count":null,"id":"animal-majority","metadata":{"id":"animal-majority"},"outputs":[],"source":["icd9_codes = \\\n","{\n","    'infection_codes': ('001','002','003','004','005','008',\n","               '009','010','011','012','013','014','015','016','017','018',\n","               '020','021','022','023','024','025','026','027','030','031',\n","               '032','033','034','035','036','037','038','039','040','041',\n","               '090','091','092','093','094','095','096','097','098','100',\n","               '101','102','103','104','110','111','112','114','115','116',\n","               '117','118','320','322','324','325','420','421','451','461',\n","               '462','463','464','465','481','482','485','486','494','510',\n","               '513','540','541','542','566','567','590','597','601','614',\n","               '615','616','681','682','683','686','730', '5695','5720',\n","                '5721','5750','5990','7110', '7907','9966','9985','9993',\n","                '49121','56201','56203','56211','56213','56983'),\n","    'organ_dysfunction_codes': ('458','293','570','584', '7855','3483','3481',\n","                                '2874','2875','2869','2866','5734'),\n","    'explicit_sepsis_codes': ('99592','78552'),\n","    'mechanical_ventilation_codes': ('9670', '9671', '9672')\n","}"]},{"cell_type":"code","execution_count":null,"id":"intelligent-monkey","metadata":{"id":"intelligent-monkey"},"outputs":[],"source":["query = \\\n","\"\"\"\n","-- Patients who were diagnosed with an infection or organ dysfunction:\n","with organ_dysfunction_table as (\n","    SELECT diag.hadm_id,\n","    CASE\n","        WHEN SUBSTR(diag.icd9_code, 1, 3) IN \"\"\" + str(icd9_codes['infection_codes']) + \"\"\" THEN 1\n","        WHEN SUBSTR(diag.icd9_code, 1, 4) IN \"\"\" + str(icd9_codes['infection_codes']) + \"\"\" THEN 1\n","        WHEN SUBSTR(diag.icd9_code, 1, 5) IN \"\"\" + str(icd9_codes['infection_codes']) + \"\"\" THEN 1\n","        ELSE 0 END AS infection,\n","    CASE\n","            WHEN SUBSTR(diag.icd9_code, 1, 3) IN \"\"\" + str(icd9_codes['organ_dysfunction_codes']) + \"\"\" THEN 1\n","            WHEN SUBSTR(diag.icd9_code, 1, 4) IN \"\"\" + str(icd9_codes['organ_dysfunction_codes']) + \"\"\" THEN 1\n","            ELSE 0 END AS organ_dysfunction,\n","    CASE\n","        WHEN SUBSTR(diag.icd9_code, 1, 5) IN \"\"\" + str(icd9_codes['explicit_sepsis_codes']) + \"\"\" THEN 1\n","        ELSE 0 END AS explicit_sepsis\n","    FROM mimiciii.diagnoses_icd diag\n","),\n","\n","-- Patients who were using mechanical ventilation:\n","mechanical_vent_table as (\n","    SELECT proc.hadm_id,\n","        CASE\n","            WHEN proc.icd9_code IN  \"\"\" + str(icd9_codes['mechanical_ventilation_codes']) + \"\"\"  THEN 1\n","            ELSE 0 END AS mech_vent\n","    FROM mimiciii.procedures_icd proc\n","),\n","\n","-- Combine the diagnoses of organ dysfunction, mechanical ventilation, infection and explicit sepsis:\n","individual_diagnoses as (\n","    SELECT a.hadm_id,\n","    CASE\n","        WHEN a.hadm_id in\n","                (SELECT DISTINCT hadm_id\n","                FROM organ_dysfunction_table\n","                WHERE infection = 1)\n","            THEN 1\n","        ELSE 0 END AS infection,\n","    CASE\n","        WHEN a.hadm_id in\n","                (SELECT DISTINCT hadm_id\n","                FROM organ_dysfunction_table\n","                WHERE explicit_sepsis = 1)\n","            THEN 1\n","        ELSE 0 END AS explicit_sepsis,\n","    CASE\n","        WHEN a.hadm_id in\n","                (SELECT DISTINCT hadm_id\n","                FROM organ_dysfunction_table\n","                WHERE organ_dysfunction = 1)\n","            THEN 1\n","        ELSE 0 END AS organ_dysfunction,\n","    CASE\n","    WHEN a.hadm_id in\n","            (SELECT DISTINCT hadm_id\n","            FROM mechanical_vent_table\n","            WHERE mech_vent = 1)\n","        THEN 1\n","    ELSE 0 END AS mech_vent\n","    FROM mimiciii.admissions a\n","),\n","\n","-- Combine individual diagnoses into a final sepsis diagnosis:\n","adults_sepsis as (\n","    SELECT ap.icustay_id,\n","    CASE\n","        WHEN explicit_sepsis = 1 THEN 1\n","        WHEN infection = 1 AND organ_dysfunction = 1 THEN 1\n","        WHEN infection = 1 AND mech_vent = 1 THEN 1\n","        ELSE 0 END AS angus\n","    FROM adult_patients ap\n","    LEFT JOIN individual_diagnoses f ON ap.hadm_id = f.hadm_id\n",")\n","\n","-- Add the exclusion criterium to the adult_patients table so we can retrieve all exclusions in the end:\n","UPDATE adult_patients\n","SET exclusion_sepsis = adults_sepsis.angus\n","FROM adults_sepsis\n","WHERE adult_patients.icustay_id = adults_sepsis.icustay_id\n","\"\"\"\n","\n","query_schema = 'SET SEARCH_PATH TO public, mimiciii;'\n","execute_query_safely(query_schema + query, con, cur)"]},{"cell_type":"code","execution_count":null,"id":"overall-stable","metadata":{"scrolled":true,"id":"overall-stable","outputId":"494c408f-1a70-442c-c9eb-0a4f188d8e36"},"outputs":[{"name":"stdout","output_type":"stream","text":["Subjects excluded because of sepsis diagnosis:  17007\n"]}],"source":["# Check if the number of excluded subject is correct:\n","query = \"\"\" SELECT * FROM adult_patients \"\"\"\n","query_output = pd.read_sql_query(query, con)\n","print('Subjects excluded because of sepsis diagnosis: ',\n","      query_output['exclusion_sepsis'].sum())"]},{"cell_type":"code","execution_count":null,"id":"tropical-exercise","metadata":{"id":"tropical-exercise"},"outputs":[],"source":["# Commit to the database:\n","con.commit()"]},{"cell_type":"code","execution_count":null,"id":"arbitrary-wrapping","metadata":{"id":"arbitrary-wrapping"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.6"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}